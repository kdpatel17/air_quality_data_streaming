networks:
  kafka-network:
    driver: bridge

services:
  # ─────────────── Kafka stack ───────────────
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - kafka-network
    restart: unless-stopped


  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"       # reachable from your laptop
    expose:
      - "9093"
    networks:
      - kafka-network
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
      # Listeners: internal for containers, external for host
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

  

  # ─────────────── Initiate kafka topic ───────────────
  init-kafka:
    image: wurstmeister/kafka:latest
    container_name: init-kafka
    depends_on:
      - kafka
    networks:
      - kafka-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "4"
    command: >
      sh -c "
      until /opt/kafka/bin/kafka-broker-api-versions.sh --bootstrap-server kafka:9093; do
        echo 'Waiting for Kafka to be ready...'
        sleep 5
      done &&
      /opt/kafka/bin/kafka-topics.sh --create --topic openaq_airquality --bootstrap-server kafka:9093 --replication-factor 1 --partitions 1 --if-not-exists &&
      echo 'List of Kafka topics:' &&
      /opt/kafka/bin/kafka-topics.sh --list --bootstrap-server kafka:9093
      "

  # ─────────────── Air-quality producer ───────────────
  ingestion:
    build:
      context: .
      dockerfile: Dockerfile.ingestion
    environment:
      BOOTSTRAP_SERVERS: kafka:9093
      TOPIC_NAME: openaq_airquality
    networks:
      - kafka-network
    volumes:
      - ./logs:/app/logs
      - ./output:/app/output
    restart: unless-stopped

  # ─────────────── Air-quality consumer ───────────────
#  consumer:
#    build:
#      context: .
#      dockerfile: Dockerfile.consume
#    environment:
#      BOOTSTRAP_SERVERS: kafka:9093
#      TOPIC_NAME: openaq_airquality
#    networks:
#      - kafka-network
#    volumes:
#      - ./logs:/app/logs
#      - ./output:/app/output